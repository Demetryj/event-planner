{"version":3,"file":"static/js/711.1e8df15a.chunk.js","mappings":"2UAWMA,EAAgB,CACpBC,MAAO,GACPC,YAAa,GACbC,KAAM,GACNC,KAAM,GACNC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,SAAU,IA4BZ,EAzBoB,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,MACXL,GAAWM,EAAAA,EAAAA,MACTC,GAAMC,EAAAA,EAAAA,MAAND,EAOR,OACEE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,KACVD,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CAAAH,SAAEJ,EAAE,6BACdK,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CACPpB,cAAeA,EACfqB,WAAYA,EAAAA,EACZC,SAAUV,EAAE,uBACZP,SAAUA,EACVkB,cAdiB,SAAAC,GACrB,IAAMC,GAAQC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQF,GAAM,IAAEjB,QAASoB,EAAYC,IAAIC,EAAAA,EAAAA,QACvDpB,GAASqB,EAAAA,EAAAA,IAASL,GACpB,MAeF,C,wDC5CO,IAkBII,EAAS,WAAH,IAAIE,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAE,OAC5BG,OAAOC,gBAAgB,IAAIC,WAAWN,IAAOO,QAAO,SAACV,EAAIW,GAWvD,OAREX,IAFFW,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGV,GAAG,GAAG,C","sources":["pages/CreateEvent.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport { useTranslation } from 'react-i18next';\nimport { ArrowBack } from 'components/ArrowBack';\nimport { MainTitle } from 'components/MainTitle';\nimport { EditForm } from 'components/EventForm';\nimport { addEvent } from 'redux/events/eventsSlice';\nimport { editSchema } from 'data/editSchema';\nimport imgDefault from 'images/default-H@2x.jpg';\n\nconst initialValues = {\n  title: '',\n  description: '',\n  date: '',\n  time: '',\n  location: '',\n  category: '',\n  picture: '',\n  priority: '',\n};\n\nconst CreateEvent = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const { t } = useTranslation();\n\n  const createNewEvent = values => {\n    const newEvent = { ...values, picture: imgDefault, id: nanoid() };\n    dispatch(addEvent(newEvent));\n  };\n\n  return (\n    <>\n      <ArrowBack />\n      <MainTitle>{t('mainTitles.createEvent')}</MainTitle>\n      <EditForm\n        initialValues={initialValues}\n        editSchema={editSchema}\n        typeForm={t('eventForm.buttonAdd')}\n        location={location}\n        onButtonClick={createNewEvent}\n      />\n    </>\n  );\n};\n\nexport default CreateEvent;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["initialValues","title","description","date","time","location","category","picture","priority","dispatch","useDispatch","useLocation","t","useTranslation","_jsxs","_Fragment","children","_jsx","ArrowBack","MainTitle","EditForm","editSchema","typeForm","onButtonClick","values","newEvent","_objectSpread","imgDefault","id","nanoid","addEvent","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}